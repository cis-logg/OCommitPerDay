reserved word, 예약어
	mnemonics, 명령어 니모닉 : MOV, ADD, MUL등의 명령어
	레지스터 이름
	directive, 디렉티브 : MASM에게 프로그램을 어떻게 어셈블 하는지 알려준다.
	속성 : 변수와 피연산자의 크기와 사용정보를 제공. BYTE, WORD 등
	연산자 : 수식에서 사용
	미리 정의된 기호 : 어셈블 할 때 상수 정수값을 반환하는 @data와 같은 기호

identifier, 식별자 
	프로그래머가 선택한 이름
	변수, 상수, 프로시저 또는 코드 레이블 등에 사용
	>대소문자 구분하지 않음(-Cp옵션 추가, 구별하게 한다)

directive, 디렉티브
	어셈블러가 인식하여 그것에 따라서 동작하는 소스 코드에 포함된 command, 명령
	실행시간에 실행되지 않음.
	변수, 매크로, 프로시저 정의할 수 있음.
	메모리 세그먼트에 이름을 부여, 어셈블러와 관련된 기타 관리 작업 수행한다.

  myVar	DWORD 26
  mov	eax, myVar
	DWORD : 프로그램에서 더블워드 변수용으로 공간을 예약하라고 지시
	MOV : 실행시간 동안 myVar 내용을 EAX레지스터에 복사하는 동작 수행
	
	각 어셈블러는 서로 다른 디렉티브 집합을 가지고 있다.

- segment, 세그먼트 정의 
.DATA : 변수를 포함하는 프로그램 영역을 표시
.CODE : 실행 가능한 명령어를 포함하는 영역을 표시
.STACK : 스택의 크기를 설정하면서 실행 스택을 가진 프로그램 영역을 표시

instruction, 명령어
	프로그램이 어셈블되었을 때에 실행 가능하게 되는 문장
	명령어는 어셈블러에 의해 기계어 바이트로 변환되고 
	실행 시간에 CPU에 의해 적재 되어 실행된다.
	
	[label : ] mnemonic [operands] [;comment]
	레이블(선택사항)
	명령어 니모닉(필수)
	피연산자(보통 필수)
	주석(선택사항)

- label, 레이블
	명령어 또는 데이터의 위치를 표시하는 식별자
	명령어 바로 앞에 있는 레이블은 그 명령어의 주소를 의미
	변수 바로 앞에 있는 레이블은 변수의 주소를 의미

	- 데이터 레이블
	코드에서 변수를 편리하게 참조하는 방법을 제공하는 변수의 위치에 대한 식별자
	    count DWORD 100
	어셈블러는 각 레이블에 숫자 주소를 부여한다.

	    array DWORD 1024, 2048
	           DWORD 4096, 8192
	array는 첫 번째 숫자(1024)의 위치를 정의한다.
	다른 숫자들은 바로 뒤의 메모리에 순서대로 배치

	- 코드 레이블
	(명령어가 위치한) 프로그램의 코드 영역에 있는 레이블은 콜론(:)으로 끝나야 한다.
	분기나 루프 명령어의 목적지로 사용된다.
	코드 레이블은 명령어와 같은 줄에 있을 수도 혼자 한 줄일 수도 있다.
	
	각 레이블명이 유일하다면 프로그램에서 같은 코드 레이블을 한 번 이상 사용 가능
	(프로시저 = 함수)
	




